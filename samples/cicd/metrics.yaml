apiVersion: iter8.tools/v2alpha2
kind: Metric
metadata:
  labels:
    creator: iter8
  name: error-rate
  namespace: default
spec:
  description: Fraction of requests with error responses
  jqExpression: .data.result[0].value[1] | tonumber
  params:
  - name: query
    value: |
      (sum(increase(istio_requests_total{response_code=~'5..',reporter='destination',destination_workload='$name',destination_workload_namespace='$namespace'}[${elapsedTime}s])) or on() vector(0)) / (sum(increase(istio_requests_total{reporter='destination',destination_workload='$name',destination_workload_namespace='$namespace'}[${elapsedTime}s])) or on() vector(0))
  provider: prometheus
  sampleSize: request-count
  type: Gauge
  urlTemplate: https://prometheus-operated.openshift-monitoring:9091/api/v1/query
  authType: Bearer
  secret: default/promsecret
  headerTemplates:
  - name: Authorization
    value: Bearer ${token}
---
apiVersion: iter8.tools/v2alpha2
kind: Metric
metadata:
  labels:
    creator: iter8
  name: mean-latency
  namespace: default
spec:
  description: Mean latency
  jqExpression: .data.result[0].value[1] | tonumber
  params:
  - name: query
    value: |
      (sum(increase(istio_request_duration_milliseconds_sum{reporter='destination',destination_workload='$name',destination_workload_namespace='$namespace'}[${elapsedTime}s])) or on() vector(0)) / (sum(increase(istio_requests_total{reporter='destination',destination_workload='$name',destination_workload_namespace='$namespace'}[${elapsedTime}s])) or on() vector(0))
  provider: prometheus
  sampleSize: request-count
  type: Gauge
  units: milliseconds
  urlTemplate: https://prometheus-operated.openshift-monitoring:9091/api/v1/query
  authType: Bearer
  secret: default/promsecret
  headerTemplates:
  - name: Authorization
    value: Bearer ${token}
---
apiVersion: iter8.tools/v2alpha2
kind: Metric
metadata:
  labels:
    creator: iter8
  name: request-count
  namespace: default
spec:
  description: Number of requests
  jqExpression: .data.result[0].value[1] | tonumber
  params:
  - name: query
    value: |
      sum(increase(istio_requests_total{reporter='destination',destination_workload='$name',destination_workload_namespace='$namespace'}[${elapsedTime}s]))
  provider: prometheus
  type: Counter
  urlTemplate: https://prometheus-operated.openshift-monitoring:9091/api/v1/query
  authType: Bearer
  secret: default/promsecret
  headerTemplates:
  - name: Authorization
    value: Bearer ${token}
